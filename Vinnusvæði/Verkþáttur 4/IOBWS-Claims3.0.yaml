openapi: 3.0.1
info:
  title: IOBWS 3.0 Domestic Claims
  version: "3.0"
  description: |
    The claim service is focused on two parties. First is the company (claimant) who creates claims and then
    the collection company.  

    The Claims Service enables creditors to create, modify and cancel claims. A creditor can also revive canceled
    claims, send claims to an intermediate debt collector and obtain a list of claims according to the given search
    criteria, and thus get a good overview of all their claims.

    The Collection Service uses the same endpoints as the claimant endpoints. There is a restriction on the 
    collection company, it's not allowed to create claims. The claim service enables dept collectors to work 
    with the claims under their care. The service is mostly as structured as the service for claims, except 
    that it is not possible to create collection claims

  contact:
    name: Stadlarad Islands
    url: https://www.stadlar.is
    email: stadlar@stadlar.is

paths:

  #####################################################
  # Claim Templates Service
  #####################################################

  /v1/claimtemplates:

    get:
      summary: Get a list of claim templates
      description: |
        Returns a list of claim templates according to the filters provided. Claim template describes many 
        attributes of the claim process and gives the consumer key information needed.
      operationId: getClaimTemplateList
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path # NO PATH PARAMETER
      #query
        - $ref: "#/components/parameters/claimantIdQuery"
        - $ref: "#/components/parameters/bankQuery"
        - $ref: "#/components/parameters/templateCodeQuery"
        - $ref: "#/components/parameters/isActiveQuery"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/itemsPerPage"
      #header
          #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #optional header parameters
        - $ref: "#/components/parameters/Authorization"
        #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ClaimListTemplate"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/claimtemplates/{claimTemplateId}:

    get:
      summary: Get a single claim template
      description: |
        Returns a single claim templates by supplied template id
      operationId: getClaimTemplate
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/claimTemplateId"
      #query # NO QUERY PARAMETER
      #header
          #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #optional header parameters
        - $ref: "#/components/parameters/Authorization"
        #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ClaimTemplate"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  #####################################################
  # Claims Service
  #####################################################

  /v1/claims/{claimId}:

    get:
      summary: Get single claim
      description: |
        Returns single claim if exists or if the user has access. The single claim function returns the existing 
        claim requested based on the claim id.
      operationId: queryClaim
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/claimId"
      #query # NO QUERY PARAMETER
      #header
          #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #optional header parameters
        - $ref: "#/components/parameters/Authorization"
        #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_QueryClaimInformation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

    delete:
      summary: Cancel a single claim
      description: |
        Change the claim status to "Cancelled". Claim can be recreated by setting the claim status to "Unpaid". When  
        a claim is cancelled, it is not deleted.
      operationId: cancelClaim
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/claimId"
      #query # NO QUERY PARAMETER
      #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #optional header parameters
        - $ref: "#/components/parameters/Authorization"
        #NO REQUEST BODY

      responses:
        '204':
          $ref: "#/components/responses/NO_CONTENT_204_Cancel"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

    patch:
      summary: Patch a single claim
      description: |
        The patch claim method modifies a previously created claim. The patch is
        then submitted and amended according to new information.
         
        Claim is recreated by changing the claim status from "Cancelled" to "Unpaid". When the claim status is changed
        from cancelled the recreate is triggered. Recreating a claim keeps existing history.
        
        Claim is cancelled by changing the claim status to "Cancelled".
        
        Use the claimDetails object to understand all the fields awailable.

      operationId: patchClaim
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/claimId"
      #query # NO QUERY PARAMETER
      #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #optional header parameters
        - $ref: "#/components/parameters/Authorization"
        #NO REQUEST BODY

      requestBody:
        # $ref: "#/components/requestBodies/patchClaim"       # JSON Patch
        $ref: "#/components/requestBodies/mergeClaim"  # JSON Merge Patch

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ClaimDetailResponseInformation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/claims/{claimId}/transactions:

    get:
      summary: Get payments for a single claim
      description: |
        Returns all claim payments. When claim is paid by debtor the claim paymentis visible is near real-time.
      operationId: queryClaimPayments
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/claimId"
      #query
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/itemsPerPage"
      #header
          #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #optional header parameters
        - $ref: "#/components/parameters/Authorization"
        #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ClaimTransactionListInformation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/claims/{claimId}/history:

    get:
      summary: Get single claim history
      description: |
        Claim history contains every event for the claim from the beginning, i.e. all changes that
        have been made to the claim together with information about the claim itself.
      operationId: queryClaimHistory
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/claimId"
      #query
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/itemsPerPage"
      #header
          #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #optional header parameters
        - $ref: "#/components/parameters/Authorization"
        #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ClaimHistoryListInformation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/claims/{claimId}/collection:

    put:
      summary: Move claim from one claim template to another.
      description: |
        The action transfers the claim between template code. When claim is moved between template codes
        it might change who can see the claim. Claims in primary collection are only visible to the claimant.
      operationId: transferClaim
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/claimId"
      #query
        - $ref: "#/components/parameters/templateCodeQuery"
      #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #optional header parameters
        - $ref: "#/components/parameters/X-Idempotency-Key"
        - $ref: "#/components/parameters/Authorization"
        #REQUEST BODY
      requestBody:
        $ref: "#/components/requestBodies/templateCode"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ClaimResponseInformation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/claims:

    get:
      summary: Get a list of claims as defined by the query parameters.
      description: |
        Getting a list of claim can be done by multiple query parameters to get focused answer.        
        Parameters:
        - dateFromQuery: Searching from a starting date
        - dateToQuery: Searching to a end date
        - dateSpanReferenceDateQuery: When date range (from, to) is defined then the next step to tell what the range
                                      applies to. Possible valibles are:
                                      - DueDate: The claim's due date
                                      - FinalDueDate: The claim's final due date
                                      - ExpirationDate: The claim cancellation date
                                      - ClosingDate:  Date when the claim was paid, canceled or transferred.
                                      - CreationDate: When the claim was created
                                      - LastChanged: Last claim change event date
        - claimantIdQuery: The claim claimant
        - payorIdQuery: The claim payor
        - statusQuery: Claim has one-of ["Unpaid", "Paid", "Cancelled"] statuses
        - stateQuery: Claim states are:
          - PrimaryCollection
          - WaitingForSecondary
          - SecondaryCollection
          - LegalCollection
        - templateCodeQuery: Bank claim identifier
        The QueryClaims function returns a list of claims. The maximum return is set with the page number and 
        number per page.
      operationId: queryClaims
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path # NO PATH PARAMETER
      #query
        - $ref: "#/components/parameters/dateFromQuery"
        - $ref: "#/components/parameters/dateToQuery"
        - $ref: "#/components/parameters/dateSpanReferenceDateQuery"
        - $ref: "#/components/parameters/claimantIdQuery"
        - $ref: "#/components/parameters/payorIdQuery"
        - $ref: "#/components/parameters/statusQuery"
        - $ref: "#/components/parameters/stateQuery"
        - $ref: "#/components/parameters/templateCodeQuery"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/itemsPerPage"
      #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #optional header parameters
        - $ref: "#/components/parameters/Authorization"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_QueryClaimListInformation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

    post:
      summary: Create a single claim
      description: |
        When claim is create operation is returned with more information about the claim create status. When claim is 
        created the possible operation statuses are:
        - InProgress: Claim has been accepted and is in the process of being created
        - Compledted: Claim has been created in the banks system without error
        - CompletedWithErrors: One ore more errors have prevented the claim to be created
        - NotConfirmed: Not confirmed
      operationId: createClaims
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path

      #query # NO QUERY PARAMETER
      #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #optional header parameters
        - $ref: "#/components/parameters/Authorization"
        #NO REQUEST BODY

      requestBody:
        $ref: "#/components/requestBodies/createClaim"

      responses:
        '201':
          $ref: "#/components/responses/OK_201_ClaimResponseInformation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/batches:

    post:
      summary: Creates a batch. Batch is a list of actions defined in the body
      description: |
        Creates a list of action defined by the request body object. Actions can be one of: 
        - recreateClaimList: List of claims to be re-created
        - createClaimList: List of claims to be created
        - cancelClaimList: List of claims to be cancelled
        - alterClaimList: List of claims to be changed
        - transferClaimList: List of claims to be moved from one template code to another
      operationId: createBatch
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path # NO PATH PARAMETER
        #query
        #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #optional header parameters
        - $ref: "#/components/parameters/X-Idempotency-Key"
        - $ref: "#/components/parameters/Authorization"
        #NO REQUEST BODY

      requestBody:
        $ref: "#/components/requestBodies/batchInitiation"

      responses:
        '201':
          $ref: "#/components/responses/OK_201_BatchInitiation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/batches/{batchId}:

    get:
      summary: Get a status of previously created batch
      description: |
        Get status of a batch. The status contains number of claims processed under the following categories:
        - Success: Number of successful processed claims
        - Failed: Number of failed claims
        - Pending: Number of waiting claims
      operationId: getBatchStatus
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path
        - $ref: "#/components/parameters/batchId"
        #query
        #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #optional header parameters
        - $ref: "#/components/parameters/Authorization"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_BatchInitiation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/claims/transactions:

    get:
      summary: Get payments for multiple claims
      description: |
        Returns all payments for multiple claims. When claim is paid by debtor the claim paymentis visible 
        is near real-time.
      operationId: getClaimTransactions
      tags:
        - Claim Service
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path # NO PATH PARAMETER
      #query
        - $ref: "#/components/parameters/claimantId"
        - $ref: "#/components/parameters/dateFromQuery"
        - $ref: "#/components/parameters/dateToQuery"
        - $ref: "#/components/parameters/templateCodeQuery"
        - $ref: "#/components/parameters/depositAccountQuery"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/itemsPerPage"
      #header
          #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #optional header parameters
        - $ref: "#/components/parameters/Authorization"
        #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ClaimTransactionListInformation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"


components:
#####################################################
# Predefined Components
#####################################################

  securitySchemes:
  #####################################################
  # Predefined Security Schemes:
  #
  # In this file only the basic security element to transport
  # the bearer token of an OAuth2 process, which has to
  # be included in the HTTP header is described.
  #
  # WARNING:
  # If you want to use this file for a productive implementation,
  # it is recommended to adjust the security schemes according to
  # your system environments and security policies.
  #####################################################
    BearerAuthOAuth:
      description: |
        Bearer Token.
        Is contained only, if an OAuth2 based authentication was performed in a pre-step.
      type: http
      scheme: bearer

  schemas:
  #####################################################
  # Predefined Schemas
  #####################################################

    #####################################################
    # _links
    #####################################################

    hrefType:
      description: Link to a resource.
      type: object
      properties:
        href:
          $ref: "#/components/schemas/hrefEntry"

    hrefEntry:
      description: Link to a resource.
      type: string

    _linksAll:
      description: |
        A _link object with all availabel link types.
      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      properties:
        self:
          $ref: "#/components/schemas/hrefType"
        status:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"
        first:
          $ref: "#/components/schemas/hrefType"
        next:
          $ref: "#/components/schemas/hrefType"
        previous:
          $ref: "#/components/schemas/hrefType"
        last:
          $ref: "#/components/schemas/hrefType"
        download:
          $ref: "#/components/schemas/hrefType"

    authorization:
      description: |
        Authorization by OAuth2 based Protocol.
      type: string

    # SIMPLE
    uuid:
      type: string
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      minLength: 36
      maxLength: 36

    claimantId:
      description: |
        ClaimantId is the Icelandic kennitala for the claimant
      type: string
      pattern: '[0-9]{10}'

    claimNo:
      description: Claim no usually 66
      type: string
      pattern: "[0-9]{2}"

    dueDate:
      description: Due date
      type: string
      format: date
      example: "2022-01-31"

    statusId:
      description: Status of an request with multiple claims to update, delete or create
      type: string
      format: uuid

    claimId:
      description: |
        Combined string
          - ClaimantId
          - Bank
          - 66
          - Claim no
          - +
          - Date in the form of YYYYMMDD
      type: string

    account:
      description: |
        Icelandic Bank Account Number Identifier.
      type: string
      pattern: "[0-9]{12}"
      example: "000126123456"

    templateCode:
      description: |
        Claim template identifier.
      type: string
      pattern: "[0-9A-Z]{3}"
      example: "001"

    bank:
      description: |
        Icelandic Bank number.
      type: string
      pattern: "[0-9]{4}"
      example: "0001"

    kennitala:
      description: |
        Icelandic Id number (kennitala).
      type: string
      pattern: "[0-9]{10}"
      example: "0208715009"

    reference:
      description: |
        Reference number determined by creditors.
      type: string
      maxLength: 16

    currencyCode:
      description: |
        ISO 4217 Alpha 3 currency code.
      type: string
      pattern: '[A-Z]{3}'
      example: "EUR"

    isActive:
      description: Describes is active state.
      type: boolean

    amountValue:
      description: |
        The amount given with fractional digits, where fractions must be compliant to the currency definition.
        Up to 14 significant figures. Negative amounts are signed by minus.
        The decimal separator is a dot.

        **Example:**
        Valid representations for numbers with up to two decimals are:

          * 1056
          * 5768.2
          * -1.50
          * 5877.78
      type: string
      pattern: "-?[0-9]{1,14}(\\.[0-9]{1,3})?"
      example: "5877.78"

    numberValue:
      description: |
        The amount given with fractional digits, where fractions must be compliant to the currency definition.
        Up to 14 significant figures. Negative amounts are signed by minus.
        The decimal separator is a dot.

        **Example:**
        Valid representations for numbers with up to two decimals are:

          * 1056
          * 5768.2
          * -1.50
          * 5877.78

        If amount Percents % is defined as:
          * 0    ->
          * 10.5 -> 10.5%
          * 100  -> 100%

      type: string
      pattern: "-?[0-9]{1,14}(\\.[0-9]{1,3})?"
      example: "5877.78"

    rateValue:
      description: |
        Indicates the percentage of penalty interest, may not be higher than the Central Bank's maximum permitted
        penalty interest rate. If the penalty interest rule specifies that penalty interest is to be calculated
        and this value is not specified, the Central Bank's maximum penalty interest rate is used automatically.

        The rate given with fractional digits.
        Up to 14 significant figures. Negative amounts are signed by minus.
        The decimal separator is a dot.

        **Example:**
        Valid representations for rate with up to four decimals are:

          * 1056
          * 5768.2124
          * -1.5012
          * 5877.7801
      type: string
      pattern: "-?[0-9]{1,14}(\\.[0-9]{1,4})?"
      example: "5877.7801"

    dateSpanReferenceDate:
      description: |
        Types of dates are as follows::
          - DueDate: The claim's due date
          - FinalDueDate: The claim's final due date
          - ExpirationDate: The claim cancellation date
          - ClosingDate:  Date when the claim was paid, canceled or transferred.
          - CreationDate: When the claim was created
          - LastChanged: Last claim change event date
      type: string
      enum:
        - "DueDate"
        - "FinalDueDate"
        - "ExpirationDate"
        - "ClosingDate"
        - "CreationDate"
        - "LastChanged"

    # COMPLEX

    batchStatusInitiation:
      description: |
        Batch status object
        There are the following batch action supported:
        * claimPost
        * claimPut
        * claimDelete
        * collectionPut
      properties:
        action:
          $ref: "#/components/schemas/claimDetails"
        batchType:
          type: string
          enum:
            - create
            - cancel
            - alter
            - transfer
        statusCode:
          description: Http status code
          type: integer


    patchObject:
      description: A JSONPatch document as defined by RFC 6902
      required:
       - "op"
       - "path"
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
           - "add"
           - "remove"
           - "replace"
           - "move"
           - "copy"
           - "test"
        path:
          type: string
          description: A JSON-Pointer
        value:
          type: object
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.

    patchObjectList:
      description: |
        List of patches on a set of objects
      type: array
      items:
        $ref: "#/components/schemas/patchObject"

    amount:
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          $ref: "#/components/schemas/currencyCode"
        amount:
          $ref: "#/components/schemas/amountValue"
      example:
        {
          "currency": "EUR",
          "amount": "123"
        }

    claimTemplateCategory:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          maxLength: 2
          minLength: 2
        name:
          type: string
          maxLength: 30

    depositAccount:
      description: |
        Information on the main disposal account.
      properties:
        id:
          $ref: "#/components/schemas/account"
        ownerId:
          $ref: "#/components/schemas/kennitala"

    depositAccountWithDetails:
      description: |
        Additional disposition invoices. Used to dispose of fees, costs or part of the payment of the claim. There
        can be a maximum of 98 accounts for each identifier.

      properties:
        id:
          $ref: "#/components/schemas/account"
        ownerId:
          $ref: "#/components/schemas/kennitala"
        type:
          description: |
            Describes what type of additional deposit account this is.

            - "DefaultInterest" - Penalty interest.
            - "DefaultCharge" - Default cost.
            - "OtherDefaultCosts" - Other default costs.
            - "AllDefaultCharges" - All default costs.
            - "OtherCosts" - Other costs.
            - "NoticeAndPaymentFee" - Notification fee.
            - "AllCosts" - All costs and fees imposed on the claim.
            - "FixedAmount" - A fixed amount is deducted from the amount of the payment and deposited in a disposable account.
            - "Percentage" - Percentage of the amount of the payment deposited in the disposable account.
            - "PrincipalDetail" - Amount of the principal of the payment deposited in a disposable account.

          enum:
            - "DefaultInterest"
            - "DefaultCharge"
            - "OtherDefaultCosts"
            - "AllDefaultCharges"
            - "OtherCosts"
            - "NoticeAndPaymentFee"
            - "AllCosts"
            - "FixedAmount"
            - "Percentage"
            - "PrincipalDetail"
        priority:
          description: Priority controls in which order the additional deposit is executed
          type: integer
        depositAmount:
          $ref: "#/components/schemas/depositAccountAmount"

    depositAccountAmount:
      description: |
        Describes what kind of deposit this is (percentage based or fixed amount)
      type: object
      properties:
        value:
          $ref: "#/components/schemas/numberValue"
        valueType:
          type: string
          enum: 
            - "FixedAmount"
            - "Percentage"

    claimTemplateDetails:
      description: |
        Claim template details.
      type: object
      properties:
        claimTemplateId:
          description: Id which is unique for each claimTemplate. This is specific to each bank.
          type: string
        claimantId:
          $ref: "#/components/schemas/claimantId"
        bank:
          $ref: "#/components/schemas/bank"
        templateCode:
          $ref: "#/components/schemas/templateCode"
        collectionType:
          type: string
          enum:
            - "PrimaryCollection"
            - "SecondaryCollection"
        category:
          $ref: "#/components/schemas/claimTemplateCategory"
        claimantStatementExtendedReferenceType:
          description: |
            Indicates which value appears in the reference area of the creditor's account statement.

            This can be one of the following values:
              - ReferenceNumber - The first 12 letters of the reference number.
              - CustomerNumber - The first 12 letters of the transaction number.
              - ClaimId - Bank, ledger and claim number.
              - PayorId - Id (kennitala) of the payor
              - DueDate - Due date of the claim in the format (yyyymmdd)
          type: string
          enum:
            - ReferenceNumber
            - CustomerNumber
            - ClaimId
            - PayorId
            - DueDate
        claimantStatementReferenceType:
          description: |
            Indicates which value appears in the reference area on the creditor's account statement.

            This can be one of the following values:
              - DueDate - Due date of the claim in the format (yyyymmdd)
              - BillNumber - Bill number of the claim
              - ClaimNumber - Claimnumber (last 6 digits)
          type: string
          enum:
            - DueDate
            - BillNumber
            - ClaimNumber
        depositAccount:
          $ref: "#/components/schemas/depositAccount"
        secondaryCollectionClaimTemplateCode:
          description: |
            ID of a collection claim template to which claims are transferred.
          type: string
          pattern: "[0-9A-Za-z]{3}"
          example: "MI1"
        withdrawalAccount:
          $ref: "#/components/schemas/account"
        additionalDepositAccounts:
          type: array
          items:
            $ref: "#/components/schemas/depositAccountWithDetails"
        isActive:
          type: boolean
        lastModified:
          description: |
            This data element might be used to indicate e.g. last time when changed.
          type: string
          format: date
          example: "2022-01-31"

    paymentFee:
      description: |
        Contains information on the fee for calculating and printing payment slips as well as sending it to the payor.

        NoticeAndPaymentFee has been renamed from previous standard to PaymentFee
          - Printing (Payment Fee) (is. Greiðslugjald)
          - Paperless (Direct Debit Fee) (is. Beingreiðslugjald)
      type: object
      properties:
        paymentFee:
          type: integer
        directDebitFee:
          type: integer

    claimKey:
      description: |
        Claim key is a composit key of kennitala, account no and due date. Account is defined as
        <bank code>66<claim number>
      type: object
      required:
        - claimantId
        - account
        - dueDate
      properties:
        claimantId:
          $ref: "#/components/schemas/kennitala"
        account:
          $ref: "#/components/schemas/account"
        dueDate:
          $ref: "#/components/schemas/dueDate"

    dayAmountItem:
      description: |
        Number of days from reference day the discount is valid for
      properties:
        day:
          type: integer
        amount:
          type: integer

    discount:
      description: |
        Contains detail information about claim discount
      properties:
        referenceDate:
          type: string
          enum:
            - "FinalDueDate"
            - "DueDate"
        first:
          $ref: "#/components/schemas/dayAmountItem"
        second:
          $ref: "#/components/schemas/dayAmountItem"

    defaultCharge:
      description: |
        OK
      properties:
        referenceDate:
          type: string
          enum:
            - "FinalDueDate"
            - "DueDate"
        isPostRefDate:
          description: |
            Indicates whether the declared number of days is before or after the reference day.
          type: boolean
        first:
          $ref: "#/components/schemas/dayAmountItem"
        second:
          $ref: "#/components/schemas/dayAmountItem"

    defaultInterest:
      description: |
        Contains information on how penalty interest is calculated.
          - NoDefaultInterest:
            No penalty interest shall be required.
          - DefaultInterestAmount:
            Indicates that penalty interest is calculated on the basis of the amount claim.
          - DefaultInterestAmountAndDefaultCharge:
            Indicates whether penalty interest is calculated on the basis of the amount and arrears of the claim.
        Percentage4: 
        Indicates the percentage of penalty interest, may not be higher than the Central Bank's maximum permitted 
        penalty interest rate. If the penalty interest rule specifies that penalty interest is to be calculated and 
        this value is not specified, the Central Bank's maximum penalty interest rate is used automatically.
      properties:
        rule:
          description: |
            Indicates whether penalty interest should be calculated after the reference date and, if so, how.
          type: string
          enum:
            - "NoDefaultInterest"
            - "DefaultInterestAmount"
            - "DefaultInterestAmountAndDefaultCharge"
        percentage4:
          $ref: "#/components/schemas/rateValue"
        specialCode:
          description: |
            To set certain values on a claim, you must submit values that are in accordance with the penalty interest
            rules of RB.
              "-":  360/360 (Due date) If penalty interest is calculated on the claim, it is always calculated 
                    from the due date to the payment date.
              "1":  No penalty interest is calculated.
              "2":  360/360 (Final due date) If penalty interest is calculated on the claim, it is always calculated 
                    from the final due date to the payment date.
              "3":  360/360 (Final due date) 1% penalty interest is calculated per day. - Government requirements.            
              "5":  Real/360 (Due date) If penalty interest is calculated on the claim, it is always calculated 
                    from the due date to the payment date.
              "6":  Real/360 (Final due date) If penalty interest is calculated on the claim, it is always calculated 
                    from the final due date to the payment date.            
              "C":  5% penalty interest is calculated per day. - Government requirements TIF.
          type: string
          enum:
            - ""
            - "1"
            - "2"
            - "3"
            - "5"
            - "6"
            - "C"

    claimStatus:
      description: Claim status
      type: string
      enum:
        - "Unpaid"
        - "Paid"
        - "Cancelled"

    collectionState:
      description: Claim process status
      type: string
      enum:
      - "PrimaryCollection"
      - "WaitingForSecondary"
      - "SecondaryCollection"
      - "LegalCollection"

    claimListDetails:
      description: |
        List of claim
      type: array
      items:
        $ref: "#/components/schemas/claimDetails"

    claimTemplateList:
      description: |
        List of claim templates
      type: array
      items:
        $ref: "#/components/schemas/claimTemplateDetails"

    claimDetails:
      description: |
        Claim object

        Description:
        * billNumber: Banknote number, optional. Information provided by creditors.        
        * discount: Contains information about discount as constant or percent
        * customerNumber: Customer billing. Unique key of the payor of the claim with the creditor. Necessary if a 
                          direct payment agreement related to a collection claim is to be established.
        * otherCosts: Other costs, including determined fees paid by the payor of a collection claim.
        * defaultCharge: Contains information on the default fee, either in a fixed amount or in percentages. Note that 
                         the amount must be within the rules that apply according to Regulation 37/2009.
        * otherDefaultCosts: Determined fees, e.g. intermediate collection fee.
        * defaultInterest: Contains information on how penalty interest is calculated.
        * discount: Contains information about discount as constant or percent
        * isPermitOutOfSequencePayment: Out of sequence payment allowed
        * isPartialPaymentAllowed: Partial payment is allowed
        * isPartialPaymentAllowed: Partial payment is allowed 
        *   additionalInformation:
          description: |
            Will be diplayed to the payor of the claim        

      type: object
      required:
        - claimKey
        - payorId
        - templateCode
        - amount
        - finalDueDate
      properties:
        claimKey:
          $ref: "#/components/schemas/claimKey"
        payorId:
          $ref: "#/components/schemas/kennitala"
        claimStatus:
          $ref: "#/components/schemas/claimStatus"
        collectionState:
          $ref: "#/components/schemas/collectionState"
        # details
        expirationDate:
          type: string
          format: date
          example: "2022-01-31"
        closingDate:
          description: Date when the claim was paid, canceled or transferred.
          type: string
          format: date
          example: "2022-01-31"
        templateCode:
          $ref: "#/components/schemas/templateCode"
        amount:
          $ref: "#/components/schemas/amount"
        reference:
          $ref: "#/components/schemas/reference"
        finalDueDate:
          type: string
          format: date
          example: "2022-01-31"
        billNumber:
          type: string
          maxLength: 7
        customerNumber:
          type: string
          maxLength: 16
        paymentFee:
          $ref: "#/components/schemas/paymentFee"
        otherCosts:
          type: integer
        otherDefaultCosts:
          type: integer
        # rules
        defaultCharge:
          $ref: "#/components/schemas/defaultCharge"
        defaultInterest:
          $ref: "#/components/schemas/defaultInterest"
        discount:
          $ref: "#/components/schemas/discount"
        isPermitOutOfSequencePayment:
          type: boolean
        isPartialPaymentAllowed:
          type: boolean
        # other
        currency:
          type: string
          pattern: '[A-Z]{3}'
        referenceRate:
          type: string
          enum:
            - "ExchangeRate"
        additionalInformation:
          type: string
          maxLength: 200
        lastChanged:
          description: |
            This data element might be used to indicate e.g. last time when changed.
          type: string
          format: date
          example: "2022-01-31"

    transferClaimDetails:
      description: |
        Transfer claim to another collection
      type: object
      required:
        - claimKey
        - collectionState
      properties:
        claimKey:
          $ref: "#/components/schemas/claimKey"
        transferToCollectionState:
          description: Billing process status, where to move the claim
          type: string
          enum:
          - "PrimaryCollection"
          - "SecondaryCollection"
          - "LegalCollection"

    alterClaimDetails:
      description: |
        Alter claim object

        Description:
        * billNumber: Banknote number, optional. Information provided by creditors.        
        * discount: Contains information about discount as constant or percent
        * customerNumber: Customer billing. Unique key of the payor of the claim with the creditor. Necessary if a 
                          direct payment agreement related to a collection claim is to be established.
        * otherCosts: Other costs, including determined fees paid by the payor of a collection claim.
        * defaultCharge: Contains information on the default fee, either in a fixed amount or in percentages. Note that 
                         the amount must be within the rules that apply according to Regulation 37/2009.
        * otherDefaultCosts: Determined fees, e.g. intermediate collection fee.
        * defaultInterest: Contains information on how penalty interest is calculated.
        * discount: Contains information about discount as constant or percent
        * isPermitOutOfSequencePayment: Out of sequence payment allowed
        * isPartialPaymentAllowed: Partial payment is allowed
        * isPartialPaymentAllowed: Partial payment is allowed 
        *   additionalInformation:
          description: |
            Will be diplayed to the payor of the claim
      type: object
      required:
        - claimKey
        - templateCode
        - amount
      properties:
        claimKey:
          $ref: "#/components/schemas/claimKey"
        # details
        expirationDate:
          type: string
          format: date
          example: "2022-01-31"
        templateCode:
          $ref: "#/components/schemas/templateCode"
        amount:
          $ref: "#/components/schemas/amount"
        reference:
          $ref: "#/components/schemas/reference"
        finalDueDate:
          type: string
          format: date
          example: "2022-01-31"
        billNumber:
          type: string
          maxLength: 7
        customerNumber:
          type: string
          maxLength: 16
        paymentFee:
          $ref: "#/components/schemas/paymentFee"
        otherCosts:
          type: integer
        otherDefaultCosts:
          type: integer
        # rules
        defaultCharge:
          $ref: "#/components/schemas/defaultCharge"
        defaultInterest:
          $ref: "#/components/schemas/defaultInterest"
        discount:
          $ref: "#/components/schemas/discount"
        isPermitOutOfSequencePayment:
          type: boolean
        isPartialPaymentAllowed:
          description: Partial payment is allowed
          type: boolean
        # other
        currency:
          type: string
          pattern: '[A-Z]{3}'
        referenceRate:
          type: string
          enum:
            - "ExchangeRate"
        additionalInformation:
          type: string
          maxLength: 200

    mergeClaimDetails:
      description: |
        Merge patch claim object
      type: object
      properties:
        # details
        expirationDate:
          type: string
          format: date
          example: "2022-01-31"
        templateCode:
          $ref: "#/components/schemas/templateCode"
        amount:
          $ref: "#/components/schemas/amount"
        reference:
          $ref: "#/components/schemas/reference"
        finalDueDate:
          type: string
          format: date
          example: "2022-01-31"
        billNumber:
          type: string
          maxLength: 7
        customerNumber:
          type: string
          maxLength: 16
        paymentFee:
          $ref: "#/components/schemas/paymentFee"
        otherCosts:
          type: integer
        otherDefaultCosts:
          type: integer
        # rules
        defaultCharge:
          $ref: "#/components/schemas/defaultCharge"
        defaultInterest:
          $ref: "#/components/schemas/defaultInterest"
        discount:
          $ref: "#/components/schemas/discount"
        isPermitOutOfSequencePayment:
          type: boolean
        isPartialPaymentAllowed:
          description: Partial payment is allowed
          type: boolean
        # other
        currency:
          type: string
          pattern: '[A-Z]{3}'
        referenceRate:
          type: string
          enum:
            - "ExchangeRate"
        additionalInformation:
          type: string
          maxLength: 200

    createClaimDetails:
      description: |
        Create claim object

        Description:
        * billNumber: Banknote number, optional. Information provided by creditors.        
        * discount: Contains information about discount as constant or percent
        * customerNumber: Customer billing. Unique key of the payor of the claim with the creditor. Necessary if a 
                          direct payment agreement related to a collection claim is to be established.
        * otherCosts: Other costs, including determined fees paid by the payor of a collection claim.
        * defaultCharge: Contains information on the default fee, either in a fixed amount or in percentages. Note that 
                         the amount must be within the rules that apply according to Regulation 37/2009.
        * otherDefaultCosts: Determined fees, e.g. intermediate collection fee.
        * defaultInterest: Contains information on how penalty interest is calculated.
        * discount: Contains information about discount as constant or percent
        * isPermitOutOfSequencePayment: Out of sequence payment allowed
        * isPartialPaymentAllowed: Partial payment is allowed
        * isPartialPaymentAllowed: Partial payment is allowed 
        *   additionalInformation:
          description: |
            Will be diplayed to the payor of the claim
      type: object
      required:
        - claimKey
        - payorId
        - templateCode
        - amount
        - finalDueDate
      properties:
        claimKey:
          $ref: "#/components/schemas/claimKey"
        payorId:
          $ref: "#/components/schemas/kennitala"
        # details
        expirationDate:
          type: string
          format: date
          example: "2022-01-31"
        templateCode:
          $ref: "#/components/schemas/templateCode"
        amount:
          $ref: "#/components/schemas/amount"
        reference:
          $ref: "#/components/schemas/reference"
        finalDueDate:
          type: string
          format: date
          example: "2022-01-31"
        billNumber:
          type: string
          maxLength: 7
        customerNumber:
          type: string
          maxLength: 16
        paymentFee:
          $ref: "#/components/schemas/paymentFee"
        otherCosts:
          type: integer
        otherDefaultCosts:
          type: integer
        # rules
        defaultCharge:
          $ref: "#/components/schemas/defaultCharge"
        defaultInterest:
          $ref: "#/components/schemas/defaultInterest"
        discount:
          $ref: "#/components/schemas/discount"
        isPermitOutOfSequencePayment:
          type: boolean
        isPartialPaymentAllowed:
          type: boolean
        # other
        currency:
          type: string
          pattern: '[A-Z]{3}'
        referenceRate:
          type: string
          enum:
            - "ExchangeRate"
        additionalInformation:
          type: string
          maxLength: 200

    cancelClaimDetails:
      description: |
        OK
      type: object
      required:
        - claimKey
      properties:
        claimKey:
          $ref: "#/components/schemas/claimKey"

    createClaimList:
      description: |
        JSON request body for a claims update request message
      type: array
      items:
        $ref: "#/components/schemas/createClaimDetails"

    #recreateClaimList:
    #  description: |
    #    JSON request body for a claims update request message
    #  type: array
    #  items:
    #    $ref: "#/components/schemas/createClaimDetails"

    transferClaimList:
      description: |
        JSON request body for a claims update request message
      type: array
      items:
        $ref: "#/components/schemas/transferClaimDetails"

    alterClaimList:
      description: |
        JSON request body for a claims update request message
      type: array
      items:
        $ref: "#/components/schemas/alterClaimDetails"

    cancelClaimList:
      description: |
        JSON request body for a claims update request message
      type: array
      items:
        $ref: "#/components/schemas/cancelClaimDetails"

    # RESPONSES

    batchStatus:
      description: | 
        Status of an batch initiation
      properties:
        batchId:
          $ref: "#/components/schemas/uuid"
        success:
          type: integer
          description: Number of successful items processed
        failed:
          type: integer
          description: Number of failed items processed
        pending:
          type: integer
          description: Number of items pending processing
        actionType:
          type: string
          enum:
            - "claimPost"
            - "claimPut"
            - "claimDelete"
            - "transferPut"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/batchStatusInitiation"



    claimError:
      description: Error code and description for the claim error
      type: object
      properties:
        code:
          type: string
        message:
          type: string

    claimOperationSuccess:
      description: Claim operation success for a claim key
      type: object
      properties:
        claimKey:
          $ref: "#/components/schemas/claimKey"
        print:
          description: Indicates whether a collection claim needs to be printed.
          type: boolean

    claimOperationError:
      description: Claim operation error for a claim key
      type: object
      properties:
        claimKey:
          $ref: "#/components/schemas/claimKey"
        error:
          $ref: "#/components/schemas/claimError"

    claimOperation:
      description: |
        Claim operation needs to return success or error information about every claim:
        Created, cancelled or altered.
        Status of the operation is as follows.
          - InProgress:           In progress The batch is in progress.
          - Completed:            Completed Batch processing is complete without error.
          - CompletedWithErrors:  Completed with Error Batch processing complete.
                                  An error has come up.
          - NotConfirmed:         Unconfirmed Unconfirmed pile, awaiting manual confirmation.
      type: object
      properties:
        id:
          $ref: "#/components/schemas/uuid"
        status:
          type: string
          enum:
            - "InProgress"
            - "Completed"
            - "CompletedWithErrors"
            - "NotConfirmed"
        success:
          type: array
          items:
            $ref: "#/components/schemas/claimOperationSuccess"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/claimOperationError"

    claimFailedOperation:
      description: |
        Failed claims when created in batch.
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/claimOperationError"

    claimHistoryList:
      description: |
        Claim history
      type: array
      items:
        $ref: "#/components/schemas/claimHistoryEvent"


    claimHistoryEvent:
      description: |
        Contains the Claim and Payment class as well as basic information on financial actions and changes to a claim,
        but the daily account of the Claim Pot's expense items is not shown. The Claim class contains the appearance
        of the claim as it was after the movement. If payment information is related to the movement, it is returned
        in the Payment class.

        Transaction type:
        - "Creation" Stofnun Stofnun kröfu.
        - "Cancellation" Niðurfelling kröfu af kröfuhafa eða eftir gildandi reglu.
        - "Update" Breyting á kröfu.
        - "Payment" Greiðsla á kröfu. Innborgun eða fullnaðargreiðsla.
        - "RefundClaimCreation" Stofnun á endurgreiðslukröfu. Endurgreiðslukröfur eru kröfur þar sem upphæð kröfunnar
          er lögð inn á reikning greiðanda og tekin út af reikningi kröfuhafa. Þessar kröfur er eingöngu hægt að stofna
          ef greiðandi er skráður með beingreiðslubeiðni. Þessar kröfur eru notaðar þegar kröfuhafi þarf að endurgreiða
          viðskiptavini sínum.
        - "ReAdjustment" Bakfærð greiðsla. Við bakfærslu á fullnaðargreiðslu er greiðslufærslan merkt með ReAdjustment
          í færslugerð, en sjálf bakfærslan fær þessa merkingu.
        - "PaymentReAdjustment" Bakfærð greiðsla. Við bakfærslu á fullnaðargreiðslu er greiðslufærslan merkt með
          ReAdjustment í færslugerð, en sjálf bakfærslan fær þessa merkingu.
        - "PartialPaymentReAdjustment" Bakfærð innborgun. Við bakfærslu á innborgun er greiðslufærslan merkt með
          ReAdjustment í færslugerð, en sjálf bakfærslan fær þessa merkingu.
        - "TransferFromOldBank" Sameining banka. Krafa hefur verið flutt úr einum banka í annan.
        - "TransferToNewBank" Sameining banka. Krafa hefur verið flutt úr einum banka í annan.
        - "OptionalClaimCancellationByPayor" Niðurfelling kröfugreiðanda á valgreiðslu kröfu.
        - "RefundPayment" Greiðsla endurgreiðslukröfu.
        - "CollectionReminderSentByBank" Innheimtuviðvörun var send út frá banka. Er eingöngu til upplýsingar í þeim
          tilvikum þar sem bankastofnun er tilbúin að láta þessar upplýsingar í té og endurspeglar ekki neinar
          útsendingar sem kunna að hafa gerst í kerfum viðskiptamanna né innheimtufyrirtækja.
      required:
        - claim
      properties:
        claim:
          $ref: "#/components/schemas/claimDetails"
        payment:
          $ref: "#/components/schemas/claimTransaction"
        transactionType:
          type: string
          enum:
            - "Creation"
            - "Cancellation"
            - "Update"
            - "Payment"
            - "RefundClaimCreation"
            - "ReAdjustment"
            - "PaymentReAdjustment"
            - "PartialPaymentReAdjustment"
            - "TransferFromOldBank"
            - "TransferToNewBank"
            - "OptionalClaimCancellationByPayor"
            - "RefundPayment"
            - "CollectionReminderSentByBank"

    claimTransactionList:
      description: |
        List of claim payments
      type: array
      items:
        $ref: "#/components/schemas/claimTransaction"

    claimTransaction:
      description: |
        Contains individual claim transaction information.
      properties:
        claimId:
          $ref: "#/components/schemas/claimId"
        claimKey:
          $ref: "#/components/schemas/claimKey"
        payorId:
          $ref: "#/components/schemas/kennitala"
        amount:
          $ref: "#/components/schemas/amountValue"
        transactionTimestamp:
          description: Timestamp when the update of the claims is performed
          type: string
          format: date-time
        bookingDate:
          description: Date when the booked at RB
          type: string
          format: date
          example: "2022-01-31"
        valueDate:
          description: | 
            Legal date of the date on which the effective date or interest date of payment is based, a maximum 
            of 10 calendar days back in time. If the date is not specified, blank, then it is based on the 
            transaction date. 
            Payment of a claim is the interest date of the effective date of penalty interest.
          type: string
          format: date
          example: "2022-01-31"
        paymentType:
          description: Type of payment, full payment, deposit, refund.
          type: string
          enum:
            - "Complete"
            - "Partial"
            - "Refund"
        depositedAmount:
          description: The amount deposited at the creditor's account.
          type: integer
        totalAmount:
          description: Total amount paid with accrued interest and fees.
          type: integer
        capitalGainsTax:
          description: Deducted capital gains tax.
          type: integer
        defaultChargeAmount:
          type: integer
        otherCostsAmount:
          type: integer
        otherDefaultCostsAmount:
          description: Other default paid.
          type: integer
        defaultInterestAmount:
          description: Amount of accrued penalty interest paid.
          type: integer
        discountAmount:
          description: Discount that was granted when a claim was paid.
          type: integer
        currency:
          type: string
          pattern: '[A-Z]{3}'
        referenceRate:
          type: string
          enum:
            - "ExchangeRate"

    #####################################################
    # Standard messages
    #####################################################

    messageCategory:
      description: Category of the message category.
      type: string
      enum:
        - "ERROR"
        - "WARNING"

    MessageCode400:
      description: Message codes. HTTP Error code 400 (BAD_REQUEST).
      type: string
      enum:
        - "FORMAT_ERROR"              #gen
        - "PARAMETER_NOT_CONSISTENT"  #gen
        - "PARAMETER_NOT_SUPPORTED"   #gen
        - "SERVICE_INVALID"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen
        - "RESOURCE_BLOCKED"          #gen
        - "TIMESTAMP_INVALID"         #gen
        - "PERIOD_INVALID"            #gen
        - "SCA_METHOD_UNKNOWN"        #gen
        - "SCA_INVALID"               #gen
        - "CONSENT_UNKNOWN"           #gen
        - "SESSIONS_NOT_SUPPORTED"    #gen

    MessageCode401:
      description: Message codes. HTTP Error code 401 (UNAUTHORIZED).
      type: string
      enum:
        - "CERTIFICATE_INVALID"       #gen
        - "ROLE_INVALID"              #gen
        - "CERTIFICATE_EXPIRED"       #gen
        - "CERTIFICATE_BLOCKED"       #gen
        - "CERTIFICATE_REVOKE"        #gen
        - "CERTIFICATE_MISSING"       #gen
        - "SIGNATURE_INVALID"         #gen
        - "SIGNATURE_MISSING"         #gen
        - "TOKEN_UNKNOWN"             #gen
        - "TOKEN_INVALID"             #gen
        - "TOKEN_EXPIRED"             #gen

    MessageCode403:
      description: Message codes. HTTP Error code 403 (FORBIDDEN).
      type: string
      enum:
        - "CONSENT_UNKNOWN"           #gen
        - "SERVICE_BLOCKED"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen

    MessageCode404:
      description: Message codes. HTTP Error code 404 (NOT FOUND).
      type: string
      enum:
        - "RESOURCE_UNKNOWN"          #gens

    MessageCode405:
      description: Message codes. HTTP Error code 405 (METHOD NOT ALLOWED).
      type: string
      enum:
        - "SERVICE_INVALID"           #gens

    #####################################################
    # Proprietary messages
    #####################################################

    messageText:
      description: Additional explaining text.
      type: string
      maxLength: 500

    message403:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode403"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message404:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode404"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message405:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode405"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    #####################################################
    # RFC7807 Messages
    #####################################################

    errorTitle:
      description: |
        Short human readable description of error type.
        Could be in local language.
        To be provided by ASPSPs.
      type: string
      maxLength: 70

    errorDetail:
      description: |
        Detailed human readable text specific to this instance of the error.
        XPath might be used to point to the issue generating the error in addition.
        Remark for Future: In future, a dedicated field might be introduced for the XPath.
      type: string
      maxLength: 500

    #####################################################
    # RFC7807 Messages
    #####################################################

    Error400:
      description: |
        Standardised definition of reporting error information according to [RFC7807].
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode400"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode400"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error401:
      description: |
        Standardised definition of reporting error information according to [RFC7807].
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode401"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode401"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error403:
      description: |
        Standardised definition of reporting error information according to [RFC7807].
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode403"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode403"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error404:
      description: |
        Standardised definition of reporting error information according to [RFC7807].
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode404"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode404"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error405:
      description: |
        Standardised definition of reporting error information according to [RFC7807].
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode405"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode405"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error403_NG:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 403.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message403"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error404_NG:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 404.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message404"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error405_NG:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 405.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message405"
        _links:
          $ref: "#/components/schemas/_linksAll"

  parameters:
  #####################################################
  # Predefined Parameters
  #####################################################

    page:
      name: page
      in: query
      description: Requested page
      required: false
      schema:
        type: integer
        default: 1

    itemsPerPage:
      name: itemsPerPage
      in: query
      description: Records per page
      required: false
      schema:
        type: integer
        default: 100

    claimId:
      name: claimId
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/claimId"

    Authorization:
      name: Authorization
      in: header
      description: |
        The bearer token
      required: True
      schema:
        $ref: "#/components/schemas/authorization"

    X-Request-ID:
      name: X-Request-ID
      in: header
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    X-Idempotency-Key:
      name: X-Idempotency-Key
      in: header
      description: Idempotency key
      required: false
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    dateFromQuery:
      name: dateFrom
      in: query
      required: false
      schema:
        type: string
        format: date
        example: "2022-01-31"

    dateToQuery:
      name: dateTo
      in: query
      required: false
      schema:
        type: string
        format: date
        example: "2022-01-31"

    claimantId:
      name: claimantId
      in: query
      description: |
        ClaimantId is the Icelandic kennitala for the claimant
      required: true
      schema:
        $ref: "#/components/schemas/kennitala"

    claimNo:
      name: claimNo
      in: path
      description: |
        Claim no usually 66
      required: true
      schema:
        $ref: "#/components/schemas/claimNo"

    dueDate:
      name: dueDate
      in: path
      description: |
        Due date
      required: true
      schema:
        $ref: "#/components/schemas/dueDate"

    claimTemplateId:
      name: claimTemplateId
      in: path
      description: |
        Unique template id defined by the banks.
      required: true
      schema:
        type: string

    statusId:
      name: statusId
      in: path
      description: |
        Status of an request with multiple claims to update, delete or create
      required: true
      schema:
        $ref: "#/components/schemas/statusId"

    claimantIdQuery:
      name: claimantId
      in: query
      description: |
        ClaimantId is the Icelandic kennitala for the claimant
      required: false
      schema:
        $ref: "#/components/schemas/kennitala"

    bankQuery:
      name: bank
      in: query
      description: |
        Bank code
      schema:
        $ref: "#/components/schemas/bank"

    templateCodeQuery:
      name: templateCode
      in: query
      description: |
        Claim template code
      schema:
        $ref: "#/components/schemas/templateCode"

    depositAccountQuery:
      name: depositAccount
      in: query
      description: |
        Deposit account filter
      schema:
        $ref: "#/components/schemas/account"

    payorIdQuery:
      name: payorId
      in: query
      description: |
        PayorId is the Icelandic kennitala for the payor
      schema:
        $ref: "#/components/schemas/kennitala"

    dateSpanReferenceDateQuery:
      name: dateType
      in: query
      description: |
        Date type to search for
      schema:
        $ref: "#/components/schemas/dateSpanReferenceDate"

    statusQuery:
      name: status
      in: query
      description: |
        The claim status to search for
      schema:
        $ref: "#/components/schemas/claimStatus"

    stateQuery:
      name: state
      in: query
      description: |
        The claim state to search for
      schema:
        $ref: "#/components/schemas/collectionState"

    isActiveQuery:
      name: isActive
      in: query
      description: |
        Is active state true or false.
      schema:
        $ref: "#/components/schemas/isActive"

    batchId:
      name: batchId
      in: path
      required: true
      description: |
        Unique identifier for a batch of claims
      schema:
        $ref: "#/components/schemas/uuid"

  requestBodies:
  #####################################################
  # Reusable Request Bodies
  #####################################################

    batchInitiation:
      description: |
        JSON request body for a list of actions inition request message

        There are the following batch action supported:
        * claimPost
        * claimPut
        * claimDelete
        * collectionPut

      required: true
      content:
        application/json:
          schema:
            oneOf:
              #- $ref: "#/components/schemas/recreateClaimList"
              - $ref: "#/components/schemas/createClaimList"
              - $ref: "#/components/schemas/cancelClaimList"
              - $ref: "#/components/schemas/alterClaimList"
              - $ref: "#/components/schemas/transferClaimList"
            properties:
              batchType:
                type: string
                enum:
                  #- recreate
                  - claimPost
                  - claimPut
                  - claimDelete
                  - collectionPut


    templateCode:
      description: |
        JSON request body for a claim request message
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/templateCode"

    claim:
      description: |
        JSON request body for a claim request message
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/claimDetails"

    alterClaim:
      description: |
        JSON request body for a alter claim request message
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/alterClaimDetails"

    mergeClaim:
      description: |
        JSON request body for a create claim request message
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/mergeClaimDetails"

    createClaim:
      description: |
        JSON request body for a create claim request message
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/createClaimDetails"

    patchClaim:
      description: |
        JSON request body for patching a claim
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/patchObjectList"

  headers:
  #####################################################
  # Reusable Response Header Elements
  #####################################################

    X-Request-ID:
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    Location:
      description: |
        Location of the created resource.
      schema:
        type: string
        format: url
      required: false

  responses:
  #####################################################
  # Reusable Responses
  #####################################################
    #####################################################
    # Positive Responses
    #####################################################

    NO_CONTENT_204_Cancel:
      description:  No Content

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #NO RESPONSE BODY

    OK_201_BatchInitiation:
      description: Batch initiation created
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/batchStatus"

    OK_200_BatchInitiation:
      description: Batch initiation created
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/batchStatus"

    OK_200_ClaimTransactionListInformation:
      description: |
        The X-Request-ID has the same value as was passed to the method, as determined by the initiating party.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        X-Paging-CurrentPage:
          description: |
            Current page number
          schema:
            type: integer
        X-Paging-TotalPages:
          description: |
            Total pages
          schema:
            type: integer
        X-Paging-TotalItems:
          description: |
            Total items
          schema:
            type: integer
        X-Paging-PerPage:
          description: |
            Items per page
          schema:
            type: integer
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/claimTransactionList"

    OK_200_ClaimHistoryListInformation:
      description: |
        The X-Request-ID has the same value as was passed to the method, as determined by the initiating party.
      headers:
        X-Paging-CurrentPage:
          description: |
            Current page number
          schema:
            type: integer
        X-Paging-TotalPages:
          description: |
            Total pages
          schema:
            type: integer
        X-Paging-TotalItems:
          description: |
            Total items
          schema:
            type: integer
        X-Paging-PerPage:
          description: |
            Items per page
          schema:
            type: integer
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/claimHistoryList"

    OK_200_ClaimResponseFailedInformation:
      description: |
        The X-Request-ID has the same value as was passed to the method, as determined by the initiating party.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/claimFailedOperation"


    OK_200_ClaimDetailResponseInformation:
      description: |
        The X-Request-ID has the same value as was passed to the method, as determined by the initiating party.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/claimDetails"


    OK_200_ClaimResponseInformation:
      description: |
        The X-Request-ID has the same value as was passed to the method, as determined by the initiating party.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/claimOperation"

    OK_201_ClaimResponseInformation:
      description: |
        The X-Request-ID has the same value as was passed to the method, as determined by the initiating party.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/claimOperation"

    OK_200_QueryClaimInformation:
      description: |
        The X-Request-ID has the same value as was passed to the method, as determined by the initiating party.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/claimDetails"

    OK_200_QueryClaimListInformation:
      description: |
        The X-Request-ID has the same value as was passed to the method, as determined by the initiating party.
      headers:
        X-Paging-CurrentPage:
          description: |
            Current page number
          schema:
            type: integer
        X-Paging-TotalPages:
          description: |
            Total pages
          schema:
            type: integer
        X-Paging-TotalItems:
          description: |
            Total items
          schema:
            type: integer
        X-Paging-PerPage:
          description: |
            Items per page
          schema:
            type: integer
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/claimListDetails"

    OK_200_ClaimListTemplate:
      description: |
        The X-Request-ID has the same value as was passed to the method, as determined by the initiating party.
      headers:
        X-Paging-CurrentPage:
          description: |
            Current page number
          schema:
            type: integer
        X-Paging-TotalPages:
          description: |
            Total pages
          schema:
            type: integer
        X-Paging-TotalItems:
          description: |
            Total items
          schema:
            type: integer
        X-Paging-PerPage:
          description: |
            Items per page
          schema:
            type: integer
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/claimTemplateList"

    OK_200_ClaimTemplate:
      description: |
        The X-Request-ID has the same value as was passed to the method, as determined by the initiating party.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/claimTemplateDetails"

    #####################################################
    # Negative Responses
    #####################################################

    BAD_REQUEST_400:
      description: Bad Request
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error400"
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error400"

    UNAUTHORIZED_401:
      description: Unauthorized
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error401"
        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error401"

    FORBIDDEN_403:
      description: Forbidden
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error403_NG"
        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error403"

    NOT_FOUND_404:
      description: Not found
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error404_NG"
        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error404"

    METHOD_NOT_ALLOWED_405:
      description: Method Not Allowed
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error405_NG"
        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error405"

    REQUEST_TIMEOUT_408:
      description: Request Timeout
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes in case of HTTP code 408

    UNSUPPORTED_MEDIA_TYPE_415:
      description: Unsupported Media Type
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes in case of HTTP code 415

    INTERNAL_SERVER_ERROR_500:
      description: Internal Server Error
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for signing baskets in case of HTTP code 500

    SERVICE_UNAVAILABLE_503:
      description: Service Unavailable
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for signing baskets in case of HTTP code 503

security:
  #####################################################
  # Global security options
  #####################################################
  - {}

tags:
  #####################################################
  # Predefined Tags to Group Methods
  #####################################################

  - name: Claim Service
    description: |
      The component for Claims offers the following services:
      * Alter claims
      * Cancel claims
      * Create claims
      * Re create claims
      * Send to secondary collection
      * Get operation results
      * Get payments
      * Get transactions